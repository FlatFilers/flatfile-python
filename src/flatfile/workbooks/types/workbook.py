# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...commons.types.workbook_id import WorkbookId
import pydantic
import typing
import typing_extensions
from ...commons.types.space_id import SpaceId
from ...core.serialization import FieldMetadata
from ...commons.types.environment_id import EnvironmentId
from ...sheets.types.sheet import Sheet
from ...commons.types.action import Action
from .workbook_config_settings import WorkbookConfigSettings
from .workbook_treatments import WorkbookTreatments
import datetime as dt
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class Workbook(UniversalBaseModel):
    """
    A collection of one or more sheets

    Examples
    --------
    import datetime

    from flatfile.commons import Action
    from flatfile.property import Property_String
    from flatfile.sheets import Sheet, SheetConfig
    from flatfile.workbooks import Workbook, WorkbookConfigSettings

    Workbook(
        id="us_wb_YOUR_ID",
        name="My First Workbook",
        space_id="us_sp_YOUR_ID",
        environment_id="us_env_YOUR_ID",
        sheets=[
            Sheet(
                id="us_sh_YOUR_ID",
                workbook_id="us_wb_YOUR_ID",
                name="Contacts",
                slug="contacts",
                config=SheetConfig(
                    name="Contacts",
                    slug="contacts",
                    fields=[
                        Property_String(
                            key="firstName",
                            label="First Name",
                        ),
                        Property_String(
                            key="lastName",
                            label="Last Name",
                        ),
                        Property_String(
                            key="email",
                            label="Email",
                        ),
                    ],
                    mapping_confidence_threshold=0.5,
                ),
                metadata={"rowHeaders": [4]},
                updated_at=datetime.datetime.fromisoformat(
                    "2021-08-31 18:00:00+00:00",
                ),
                created_at=datetime.datetime.fromisoformat(
                    "2021-08-31 18:00:00+00:00",
                ),
            )
        ],
        labels=["simple-demo"],
        actions=[
            Action(
                operation="submitAction",
                mode="foreground",
                label="Submit",
                description="Submit data to webhook.site",
                primary=True,
            )
        ],
        settings=WorkbookConfigSettings(
            track_changes=True,
        ),
        updated_at=datetime.datetime.fromisoformat(
            "2021-01-01 00:00:00+00:00",
        ),
        created_at=datetime.datetime.fromisoformat(
            "2021-01-01 00:00:00+00:00",
        ),
        expired_at=datetime.datetime.fromisoformat(
            "2021-01-01 00:00:00+00:00",
        ),
    )
    """

    id: WorkbookId = pydantic.Field()
    """
    ID of the Workbook.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Name of the Workbook.
    """

    space_id: typing_extensions.Annotated[SpaceId, FieldMetadata(alias="spaceId")] = pydantic.Field()
    """
    Associated Space ID of the Workbook.
    """

    environment_id: typing_extensions.Annotated[EnvironmentId, FieldMetadata(alias="environmentId")] = pydantic.Field()
    """
    Associated Environment ID of the Workbook.
    """

    sheets: typing.Optional[typing.List[Sheet]] = pydantic.Field(default=None)
    """
    A list of Sheets associated with the Workbook.
    """

    labels: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    A list of labels for the Workbook.
    """

    actions: typing.Optional[typing.List[Action]] = pydantic.Field(default=None)
    """
    A list of Actions associated with the Workbook.
    """

    settings: typing.Optional[WorkbookConfigSettings] = pydantic.Field(default=None)
    """
    The Workbook settings.
    """

    metadata: typing.Optional[typing.Optional[typing.Any]] = pydantic.Field(default=None)
    """
    Metadata for the workbook
    """

    treatments: typing.Optional[typing.List[WorkbookTreatments]] = pydantic.Field(default=None)
    """
    Treatments for the workbook
    """

    namespace: typing.Optional[str] = None
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")] = pydantic.Field()
    """
    Date the workbook was last updated
    """

    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")] = pydantic.Field()
    """
    Date the workbook was created
    """

    expired_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="expiredAt")] = (
        pydantic.Field(default=None)
    )
    """
    Date the workbook was created
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
