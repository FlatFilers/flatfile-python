# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .workbook import Workbook
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ListWorkbooksResponse(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from flatfile.commons import Action
    from flatfile.property import Property_String
    from flatfile.sheets import Sheet, SheetConfig
    from flatfile.workbooks import (
        ListWorkbooksResponse,
        Workbook,
        WorkbookConfigSettings,
    )

    ListWorkbooksResponse(
        data=[
            Workbook(
                id="us_wb_YOUR_ID",
                name="My First Workbook",
                space_id="us_sp_YOUR_ID",
                environment_id="us_env_YOUR_ID",
                sheets=[
                    Sheet(
                        id="us_sh_YOUR_ID",
                        workbook_id="us_wb_YOUR_ID",
                        name="Contacts",
                        slug="contacts",
                        config=SheetConfig(
                            name="Contacts",
                            slug="contacts",
                            fields=[
                                Property_String(
                                    key="firstName",
                                    label="First Name",
                                ),
                                Property_String(
                                    key="lastName",
                                    label="Last Name",
                                ),
                                Property_String(
                                    key="email",
                                    label="Email",
                                ),
                            ],
                            mapping_confidence_threshold=0.5,
                        ),
                        metadata={"rowHeaders": [4]},
                        updated_at=datetime.datetime.fromisoformat(
                            "2021-08-31 18:00:00+00:00",
                        ),
                        created_at=datetime.datetime.fromisoformat(
                            "2021-08-31 18:00:00+00:00",
                        ),
                    )
                ],
                labels=["simple-demo"],
                actions=[
                    Action(
                        operation="submitAction",
                        mode="foreground",
                        label="Submit",
                        description="Submit data to webhook.site",
                        primary=True,
                    )
                ],
                settings=WorkbookConfigSettings(
                    track_changes=True,
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2021-01-01 00:00:00+00:00",
                ),
                created_at=datetime.datetime.fromisoformat(
                    "2021-01-01 00:00:00+00:00",
                ),
                expired_at=datetime.datetime.fromisoformat(
                    "2021-01-01 00:00:00+00:00",
                ),
            )
        ],
    )
    """

    data: typing.List[Workbook]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
