# This file was auto-generated by Fern from our API Definition.

from .internal_space_config_base import InternalSpaceConfigBase
import typing
import pydantic
import typing_extensions
from ...core.serialization import FieldMetadata
from ...environments.types.guest_authentication_enum import GuestAuthenticationEnum
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SpaceConfig(InternalSpaceConfigBase):
    """
    Properties used to create a new Space

    Examples
    --------
    from flatfile.spaces import SpaceConfig

    SpaceConfig(
        name="My First Workbook",
        display_order=1,
        environment_id="us_env_YOUR_ID",
        primary_workbook_id="us_wb_YOUR_ID",
    )
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the space
    """

    display_order: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="displayOrder")] = (
        pydantic.Field(default=None)
    )
    """
    The display order
    """

    guest_authentication: typing_extensions.Annotated[
        typing.Optional[typing.List[GuestAuthenticationEnum]], FieldMetadata(alias="guestAuthentication")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
