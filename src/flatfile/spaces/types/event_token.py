# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ...commons.types.account_id import AccountId
from ...core.serialization import FieldMetadata
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class EventToken(UniversalBaseModel):
    """
    Properties used to allow users to connect to the event bus

    Examples
    --------
    from flatfile.spaces import EventToken

    EventToken(
        account_id="us_acc_YOUR_ID",
        subscribe_key="sub-c-TOKEN",
        ttl=15,
        token="LONG-TOKEN",
    )
    """

    account_id: typing_extensions.Annotated[typing.Optional[AccountId], FieldMetadata(alias="accountId")] = (
        pydantic.Field(default=None)
    )
    """
    The ID of the Account.
    """

    subscribe_key: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="subscribeKey")] = (
        pydantic.Field(default=None)
    )
    """
    The id of the event bus to subscribe to
    """

    ttl: typing.Optional[int] = pydantic.Field(default=None)
    """
    Time to live in minutes
    """

    token: typing.Optional[str] = pydantic.Field(default=None)
    """
    This should be your API key.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
