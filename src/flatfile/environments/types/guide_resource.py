# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...commons.types.guide_id import GuideId
import typing
from .guide_version_resource import GuideVersionResource
import typing_extensions
import datetime as dt
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GuideResource(UniversalBaseModel):
    """
    A guide

    Examples
    --------
    import datetime

    from flatfile.environments import GuideResource

    GuideResource(
        id="us_gu_YOUR_ID",
        description="Getting started guide",
        title="Importing your data",
        slug="getting-started",
        versions=[],
        blocks=[],
        metadata={"category": "onboarding"},
        created_at=datetime.datetime.fromisoformat(
            "2023-10-30 16:59:45.735000+00:00",
        ),
        updated_at=datetime.datetime.fromisoformat(
            "2023-10-30 16:59:45.735000+00:00",
        ),
    )
    """

    id: GuideId
    description: typing.Optional[str] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    slug: str
    title: str
    versions: typing.List[GuideVersionResource]
    blocks: typing.List[typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]]]
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
