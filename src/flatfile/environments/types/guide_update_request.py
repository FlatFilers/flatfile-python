# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .guide_version_resource import GuideVersionResource
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GuideUpdateRequest(UniversalBaseModel):
    """
    Update a guide

    Examples
    --------
    from flatfile.environments import GuideUpdateRequest

    GuideUpdateRequest(
        description="Updated getting started guide",
        title="Data import made easy",
        slug="getting-started",
        environment_id="commons.EnvironmentId",
        metadata={"category": "onboarding"},
    )
    """

    description: typing.Optional[str] = None
    title: typing.Optional[str] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    slug: typing.Optional[str] = None
    versions: typing.Optional[typing.List[GuideVersionResource]] = None
    blocks: typing.Optional[typing.List[typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]]]] = None
    environment_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="environmentId")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
