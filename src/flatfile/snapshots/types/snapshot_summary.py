# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from .summary_section import SummarySection
from ...core.serialization import FieldMetadata
from .schema_diff_record import SchemaDiffRecord
import pydantic
from ...sheets.types.sheet_config import SheetConfig
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class SnapshotSummary(UniversalBaseModel):
    created_since: typing_extensions.Annotated[SummarySection, FieldMetadata(alias="createdSince")]
    updated_since: typing_extensions.Annotated[SummarySection, FieldMetadata(alias="updatedSince")]
    deleted_since: typing_extensions.Annotated[SummarySection, FieldMetadata(alias="deletedSince")]
    schema_diff: typing_extensions.Annotated[SchemaDiffRecord, FieldMetadata(alias="schemaDiff")] = pydantic.Field()
    """
    The schema diff between the snapshot and the current sheet schema.
    """

    config: SheetConfig = pydantic.Field()
    """
    The sheet configuration at the time of the snapshot.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
