# This file was auto-generated by Fern from our API Definition.

from .record_base import RecordBase
from .diff_data import DiffData
import typing
from ...data_clips.types.resolve import Resolve
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class DiffRecord(RecordBase):
    """
    Examples
    --------
    from flatfile.records import DiffRecord, DiffValue

    DiffRecord(
        id="us_rc_YOUR_ID",
        values={
            "firstName": DiffValue(
                snapshot_value="John",
                value="Johns",
            ),
            "lastName": DiffValue(
                snapshot_value="Doe",
                value="Does",
            ),
            "email": DiffValue(
                snapshot_value="john.doe@example.com",
                value="john.doe@example.com",
            ),
        },
    )
    """

    values: DiffData
    resolves: typing.Optional[typing.List[Resolve]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
