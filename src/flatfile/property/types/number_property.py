# This file was auto-generated by Fern from our API Definition.

from .base_property import BaseProperty
from .arrayable_property import ArrayableProperty
import typing
from .number_config import NumberConfig
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class NumberProperty(BaseProperty, ArrayableProperty):
    """
    Defines a property that should be stored and read as either an integer or floating point number. Database engines should look at the configuration to determine ideal storage format.
    """

    config: typing.Optional[NumberConfig] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
