# This file was auto-generated by Fern from our API Definition.

from .base_property import BaseProperty
from .enum_property_config import EnumPropertyConfig
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class EnumListProperty(BaseProperty):
    """
    Defines an array of values selected from an enumerated list of options. Matching tooling attempts to resolve incoming data assigment to a valid option. The maximum number of items that can be in this list is `100`.
    """

    config: EnumPropertyConfig

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
