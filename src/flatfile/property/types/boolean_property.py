# This file was auto-generated by Fern from our API Definition.

from .base_property import BaseProperty
import typing
from .boolean_property_config import BooleanPropertyConfig
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class BooleanProperty(BaseProperty):
    """
    A `true` or `false` value type. Matching engines should attempt to resolve all common ways of representing this value and it should usually be displayed as a checkbox.
    """

    config: typing.Optional[BooleanPropertyConfig] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
