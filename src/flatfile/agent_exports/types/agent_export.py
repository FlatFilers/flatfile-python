# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...commons.types.agent_export_id import AgentExportId
import typing_extensions
from ...commons.types.agent_id import AgentId
from ...core.serialization import FieldMetadata
from .agent_export_type import AgentExportType
from ...commons.types.account_id import AccountId
from ...commons.types.environment_id import EnvironmentId
import datetime as dt
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AgentExport(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from flatfile.agent_exports import AgentExport

    AgentExport(
        id="us_agx_YOUR_ID",
        agent_id="us_ag_YOUR_ID",
        export_type="AUTOBUILD_INLINED",
        account_id="us_acc_YOUR_ID",
        environment_id="us_env_YOUR_ID",
        created_at=datetime.datetime.fromisoformat(
            "2023-10-30 16:59:45.735000+00:00",
        ),
        updated_at=datetime.datetime.fromisoformat(
            "2023-10-30 16:59:45.735000+00:00",
        ),
    )
    """

    id: AgentExportId
    agent_id: typing_extensions.Annotated[AgentId, FieldMetadata(alias="agentId")]
    export_type: typing_extensions.Annotated[AgentExportType, FieldMetadata(alias="exportType")]
    account_id: typing_extensions.Annotated[AccountId, FieldMetadata(alias="accountId")]
    environment_id: typing_extensions.Annotated[EnvironmentId, FieldMetadata(alias="environmentId")]
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]
    deleted_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="deletedAt")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
