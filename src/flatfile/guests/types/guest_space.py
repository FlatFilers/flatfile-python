# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...commons.types.space_id import SpaceId
import typing
from .guest_workbook import GuestWorkbook
import typing_extensions
import datetime as dt
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GuestSpace(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from flatfile.guests import GuestSpace, GuestWorkbook

    GuestSpace(
        id="us_sp_YOUR_ID",
        workbooks=[
            GuestWorkbook(
                id="us_wb_YOUR_ID",
            )
        ],
        last_accessed=datetime.datetime.fromisoformat(
            "2023-10-30 16:59:45.735000+00:00",
        ),
    )
    """

    id: SpaceId
    workbooks: typing.Optional[typing.List[GuestWorkbook]] = None
    last_accessed: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastAccessed")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
