# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ...commons.types.environment_id import EnvironmentId
from ...core.serialization import FieldMetadata
from .guest_space import GuestSpace
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GuestConfigUpdate(UniversalBaseModel):
    """
    Properties used to update an existing guest

    Examples
    --------
    from flatfile.guests import GuestConfigUpdate

    GuestConfigUpdate(
        email="updated@example.com",
        name="Your Name Updated",
    )
    """

    environment_id: typing_extensions.Annotated[
        typing.Optional[EnvironmentId], FieldMetadata(alias="environmentId")
    ] = None
    email: typing.Optional[str] = None
    name: typing.Optional[str] = None
    spaces: typing.Optional[typing.List[GuestSpace]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
