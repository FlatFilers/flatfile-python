# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .guest import Guest
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ListGuestsResponse(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from flatfile.guests import Guest, GuestSpace, GuestWorkbook, ListGuestsResponse

    ListGuestsResponse(
        data=[
            Guest(
                id="us_g_YOUR_ID",
                environment_id="us_env_YOUR_ID",
                email="email@example.com",
                name="Your Name",
                spaces=[
                    GuestSpace(
                        id="us_sp_YOUR_ID",
                        workbooks=[
                            GuestWorkbook(
                                id="us_wb_YOUR_ID",
                            )
                        ],
                        last_accessed=datetime.datetime.fromisoformat(
                            "2023-10-30 16:59:45.735000+00:00",
                        ),
                    )
                ],
                created_at=datetime.datetime.fromisoformat(
                    "2023-10-30 16:59:45.735000+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2023-10-30 16:59:45.735000+00:00",
                ),
            )
        ],
    )
    """

    data: typing.List[Guest]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
