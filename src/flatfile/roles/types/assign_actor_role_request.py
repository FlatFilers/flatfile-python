# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...commons.types.role_id import RoleId
from ...core.serialization import FieldMetadata
from .resource_id_union import ResourceIdUnion
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class AssignActorRoleRequest(UniversalBaseModel):
    """
    Examples
    --------
    from flatfile.roles import AssignActorRoleRequest

    AssignActorRoleRequest(
        role_id="us_rol_YOUR_ID",
        resource_id="us_acc_YOUR_ID",
    )
    """

    role_id: typing_extensions.Annotated[RoleId, FieldMetadata(alias="roleId")]
    resource_id: typing_extensions.Annotated[ResourceIdUnion, FieldMetadata(alias="resourceId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
