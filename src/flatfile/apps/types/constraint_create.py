# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ...commons.types.app_id import AppId
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ConstraintCreate(UniversalBaseModel):
    description: typing.Optional[str] = None
    function: typing.Optional[str] = None
    options: typing.Optional[typing.Optional[typing.Any]] = None
    label: typing.Optional[str] = None
    validator: typing.Optional[str] = None
    app_id: typing_extensions.Annotated[typing.Optional[AppId], FieldMetadata(alias="appId")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
