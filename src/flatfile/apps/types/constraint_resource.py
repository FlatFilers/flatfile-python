# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...commons.types.constraint_id import ConstraintId
import typing_extensions
from ...commons.types.app_id import AppId
from ...core.serialization import FieldMetadata
import typing
import datetime as dt
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ConstraintResource(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from flatfile.apps import ConstraintResource

    ConstraintResource(
        id="us_cn_YOUR_ID",
        app_id="us_app_YOUR_ID",
        validator="UsPhoneValidation",
        description="Validates that a phone number matches US format",
        function='function constraint(value, key, { config, record }) {\n  const phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  if (!phoneRegex.test(value)) {\n    record.addError(key, "Please enter a valid US phone number");\n  }\n}\n',
        label="US Phone Number",
        options={
            "errorMessage": "Invalid phone number format",
            "allowEmpty": False,
        },
        created_at=datetime.datetime.fromisoformat(
            "2024-01-15 10:00:00+00:00",
        ),
        updated_at=datetime.datetime.fromisoformat(
            "2024-01-15 10:00:00+00:00",
        ),
    )
    """

    id: ConstraintId
    app_id: typing_extensions.Annotated[AppId, FieldMetadata(alias="appId")]
    validator: str
    description: typing.Optional[str] = None
    function: typing.Optional[str] = None
    options: typing.Optional[typing.Optional[typing.Any]] = None
    label: typing.Optional[str] = None
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
