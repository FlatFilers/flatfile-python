# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ...core.serialization import FieldMetadata
import datetime as dt
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AppPatch(UniversalBaseModel):
    """
    Update an app

    Examples
    --------
    from flatfile.apps import AppPatch

    AppPatch(
        name="Nightly Data Loads",
        namespace="nightly-data",
        entity="Sync",
        entity_plural="Syncs",
        icon='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-bar-chart-fill" viewBox="0 0 16 16">\n  <path d="M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z"/>\n</svg>',
        metadata={"foo": "bar"},
    )
    """

    name: typing.Optional[str] = None
    namespace: typing.Optional[str] = None
    entity: typing.Optional[str] = None
    entity_plural: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="entityPlural")] = None
    icon: typing.Optional[str] = None
    metadata: typing.Optional[typing.Optional[typing.Any]] = None
    environment_filters: typing_extensions.Annotated[
        typing.Optional[typing.Optional[typing.Any]], FieldMetadata(alias="environmentFilters")
    ] = None
    blueprint: typing.Optional[typing.Optional[typing.Any]] = None
    activated_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="activatedAt")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
