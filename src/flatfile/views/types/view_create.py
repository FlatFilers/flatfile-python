# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...commons.types.sheet_id import SheetId
from ...core.serialization import FieldMetadata
from .view_config import ViewConfig
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class ViewCreate(UniversalBaseModel):
    """
    Examples
    --------
    from flatfile.views import ViewConfig, ViewCreate

    ViewCreate(
        sheet_id="us_sh_YOUR_ID",
        name="My View",
        config=ViewConfig(
            filter="error",
            filter_field="email",
            q="firstname like %John%",
            sort_field="email",
            sort_direction="asc",
        ),
    )
    """

    sheet_id: typing_extensions.Annotated[SheetId, FieldMetadata(alias="sheetId")]
    name: str
    config: ViewConfig

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
