# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ActionConstraint_HasAllValid(UniversalBaseModel):
    type: typing.Literal["hasAllValid"] = "hasAllValid"
    ignore_selection: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="ignoreSelection")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class ActionConstraint_HasSelection(UniversalBaseModel):
    type: typing.Literal["hasSelection"] = "hasSelection"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class ActionConstraint_HasData(UniversalBaseModel):
    type: typing.Literal["hasData"] = "hasData"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class ActionConstraint_HasColumnEnabled(UniversalBaseModel):
    type: typing.Literal["hasColumnEnabled"] = "hasColumnEnabled"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


ActionConstraint = typing.Union[
    ActionConstraint_HasAllValid,
    ActionConstraint_HasSelection,
    ActionConstraint_HasData,
    ActionConstraint_HasColumnEnabled,
]
