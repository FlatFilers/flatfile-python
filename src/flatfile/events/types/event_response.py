# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .event import Event
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class EventResponse(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from flatfile.events import (
        Context,
        Event_WorkbookUpdated,
        EventResponse,
        Origin,
    )

    EventResponse(
        data=Event_WorkbookUpdated(
            id="us_evt_YOUR_ID",
            created_at=datetime.datetime.fromisoformat(
                "2023-11-07 20:46:04.300000+00:00",
            ),
            payload={"recordsAdded": 100},
            domain="workbook",
            context=Context(
                account_id="us_acc_YOUR_ID",
                actor_id="us_key_SOME_KEY",
                environment_id="us_env_YOUR_ID",
                space_id="us_sp_YOUR_ID",
                workbook_id="us_wb_YOUR_ID",
            ),
            callback_url="",
            data_url="",
            namespaces=["workbook"],
            origin=Origin(
                id="us_wb_YOUR_ID",
            ),
        ),
    )
    """

    data: Event

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
