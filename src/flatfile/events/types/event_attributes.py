# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
import datetime as dt
from ...core.serialization import FieldMetadata
import pydantic
from .progress import Progress
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class EventAttributes(UniversalBaseModel):
    """
    The attributes of the event
    """

    target_updated_at: typing_extensions.Annotated[
        typing.Optional[dt.datetime], FieldMetadata(alias="targetUpdatedAt")
    ] = pydantic.Field(default=None)
    """
    Date the related entity was last updated
    """

    progress: typing.Optional[Progress] = pydantic.Field(default=None)
    """
    The progress of the event within a collection of iterable events
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
