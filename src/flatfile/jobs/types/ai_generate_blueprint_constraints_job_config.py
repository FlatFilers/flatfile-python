# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...commons.types.space_id import SpaceId
from ...core.serialization import FieldMetadata
from ...commons.types.workbook_id import WorkbookId
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class AiGenerateBlueprintConstraintsJobConfig(UniversalBaseModel):
    space_id: typing_extensions.Annotated[SpaceId, FieldMetadata(alias="spaceId")]
    workbook_id: typing_extensions.Annotated[WorkbookId, FieldMetadata(alias="workbookId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
