# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class JobSubject_Resource(UniversalBaseModel):
    """
    Subject parameters for this job type

    Examples
    --------
    from flatfile.jobs import JobSubject_Resource

    JobSubject_Resource(
        id="us_wb_YOUR_ID",
    )
    """

    type: typing.Literal["resource"] = "resource"
    id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class JobSubject_Collection(UniversalBaseModel):
    """
    Subject parameters for this job type

    Examples
    --------
    from flatfile.jobs import JobSubject_Resource

    JobSubject_Resource(
        id="us_wb_YOUR_ID",
    )
    """

    type: typing.Literal["collection"] = "collection"
    resource: str
    params: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    query: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


"""
from flatfile.jobs import JobSubject_Resource

JobSubject_Resource(
    id="us_wb_YOUR_ID",
)
"""
JobSubject = typing.Union[JobSubject_Resource, JobSubject_Collection]
