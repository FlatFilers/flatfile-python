# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .certainty import Certainty
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Metadata(UniversalBaseModel):
    certainty: typing.Optional[Certainty] = None
    confidence: typing.Optional[float] = None
    source: typing.Optional[str] = None
    detected_delimiter: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="detectedDelimiter")] = (
        None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
