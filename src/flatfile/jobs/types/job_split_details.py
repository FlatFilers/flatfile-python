# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .job_parts import JobParts
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class JobSplitDetails(UniversalBaseModel):
    """
    Info about the reason the job was split

    Examples
    --------
    from flatfile.jobs import JobSplitDetails

    JobSplitDetails(
        parts=[{}],
        run_in_parallel=True,
    )
    """

    parts: JobParts
    run_in_parallel: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="runInParallel")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
