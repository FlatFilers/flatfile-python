# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .job_outcome import JobOutcome
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class JobCompleteDetails(UniversalBaseModel):
    """
    Outcome summary of a job

    Examples
    --------
    from flatfile.jobs import JobCompleteDetails, JobOutcome, JobOutcomeNext_Id

    JobCompleteDetails(
        outcome=JobOutcome(
            acknowledge=True,
            button_text="Acknowledge",
            next=JobOutcomeNext_Id(
                id="us_jb_YOUR_ID",
            ),
            heading="Success",
            message="Job was successful",
        ),
        info="Job is Complete",
    )
    """

    outcome: typing.Optional[JobOutcome] = None
    info: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
