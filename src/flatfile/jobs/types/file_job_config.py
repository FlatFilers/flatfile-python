# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .driver import Driver
import pydantic
import typing
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class FileJobConfig(UniversalBaseModel):
    driver: Driver = pydantic.Field()
    """
    The driver to use for extracting data from the file
    """

    options: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    The options to use for extracting data from the file
    """

    detected_header_row: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="detectedHeaderRow")] = (
        pydantic.Field(default=None)
    )
    """
    The row number of the header row detected at extraction time
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
