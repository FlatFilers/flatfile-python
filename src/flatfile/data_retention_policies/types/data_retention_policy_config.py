# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .data_retention_policy_enum import DataRetentionPolicyEnum
import typing_extensions
from ...commons.types.environment_id import EnvironmentId
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class DataRetentionPolicyConfig(UniversalBaseModel):
    """
    Examples
    --------
    from flatfile.data_retention_policies import DataRetentionPolicyConfig

    DataRetentionPolicyConfig(
        type="lastActivity",
        period=5,
        environment_id="us_env_YOUR_ID",
    )
    """

    type: DataRetentionPolicyEnum
    period: int
    environment_id: typing_extensions.Annotated[EnvironmentId, FieldMetadata(alias="environmentId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
