# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class Entitlement(UniversalBaseModel):
    """
    An entitlement belonging to a resource

    Examples
    --------
    from flatfile.entitlements import Entitlement

    Entitlement(
        key="snapshots",
        metadata={"files": 10},
    )
    """

    key: str = pydantic.Field()
    """
    Short name for the entitlement
    """

    metadata: typing.Optional[typing.Any] = pydantic.Field(default=None)
    """
    Contains conditions or limits for an entitlement
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
