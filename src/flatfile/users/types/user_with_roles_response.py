# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .user_with_roles import UserWithRoles
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class UserWithRolesResponse(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from flatfile.roles import ActorRoleResponse
    from flatfile.users import UserWithRoles, UserWithRolesResponse

    UserWithRolesResponse(
        data=UserWithRoles(
            id="us_usr_YOUR_ID",
            email="john.smith@example.com",
            name="john.smith",
            account_id="us_acc_YOUR_ID",
            idp="FRONTEGG",
            idp_ref="ab1cf38e-e617-4547-b37d-376a7ac9e554",
            metadata={},
            created_at=datetime.datetime.fromisoformat(
                "2023-10-30 16:59:45.735000+00:00",
            ),
            updated_at=datetime.datetime.fromisoformat(
                "2023-10-30 16:59:45.735000+00:00",
            ),
            last_seen_at=datetime.datetime.fromisoformat(
                "2023-10-30 16:59:45.735000+00:00",
            ),
            dashboard=2,
            actor_roles=[
                ActorRoleResponse(
                    id="us_acr_YOUR_ID",
                    role_id="us_rol_YOUR_ID",
                    actor_id="us_usr_YOUR_ID",
                    resource_id="us_acc_YOUR_ID",
                    created_at=datetime.datetime.fromisoformat(
                        "2021-01-01 00:00:00+00:00",
                    ),
                    updated_at=datetime.datetime.fromisoformat(
                        "2021-01-01 00:00:00+00:00",
                    ),
                ),
                ActorRoleResponse(
                    id="us_acr_YOUR_ID",
                    role_id="us_rol_YOUR_ID",
                    actor_id="us_ag_YOUR_ID",
                    resource_id="us_env_YOUR_ID",
                    created_at=datetime.datetime.fromisoformat(
                        "2021-01-01 00:00:00+00:00",
                    ),
                    updated_at=datetime.datetime.fromisoformat(
                        "2021-01-01 00:00:00+00:00",
                    ),
                ),
            ],
        ),
    )
    """

    data: UserWithRoles

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
