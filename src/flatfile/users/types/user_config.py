# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...commons.types.account_id import AccountId
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class UserConfig(UniversalBaseModel):
    """
    Properties used to create a new user

    Examples
    --------
    from flatfile.users import UserConfig

    UserConfig(
        email="john.smith@example.com",
        name="john.smith",
        account_id="us_acc_YOUR_ID",
    )
    """

    email: str
    name: str
    account_id: typing_extensions.Annotated[AccountId, FieldMetadata(alias="accountId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
