# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class JobStatus(str, enum.Enum):
    """
    the status of the job
    """

    PLANNING = "planning"
    READY = "ready"
    EXECUTING = "executing"
    COMPLETE = "complete"
    FAILED = "failed"

    def visit(
        self,
        planning: typing.Callable[[], T_Result],
        ready: typing.Callable[[], T_Result],
        executing: typing.Callable[[], T_Result],
        complete: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is JobStatus.PLANNING:
            return planning()
        if self is JobStatus.READY:
            return ready()
        if self is JobStatus.EXECUTING:
            return executing()
        if self is JobStatus.COMPLETE:
            return complete()
        if self is JobStatus.FAILED:
            return failed()
