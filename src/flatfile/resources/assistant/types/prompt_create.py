# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...commons.types.environment_id import EnvironmentId
from ...commons.types.space_id import SpaceId

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class PromptCreate(pydantic.BaseModel):
    """
    Create a prompts
    ---
    from flatfile import PromptCreate

    PromptCreate(
        prompt="Combine first name and last name into a new column called Full Name",
        environment_id="us_env_YOUR_ID",
        space_id="us_sp_YOUR_ID",
    )
    """

    prompt: str
    environment_id: EnvironmentId = pydantic.Field(alias="environmentId")
    space_id: SpaceId = pydantic.Field(alias="spaceId")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
