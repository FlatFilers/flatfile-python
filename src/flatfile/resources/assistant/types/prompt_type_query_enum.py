# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PromptTypeQueryEnum(str, enum.Enum):
    ALL = "ALL"
    AI_ASSIST = "AI_ASSIST"
    CONSTRAINT_GENERATION = "CONSTRAINT_GENERATION"

    def visit(
        self,
        all_: typing.Callable[[], T_Result],
        ai_assist: typing.Callable[[], T_Result],
        constraint_generation: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PromptTypeQueryEnum.ALL:
            return all_()
        if self is PromptTypeQueryEnum.AI_ASSIST:
            return ai_assist()
        if self is PromptTypeQueryEnum.CONSTRAINT_GENERATION:
            return constraint_generation()
