# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class StringConfigOptions(str, enum.Enum):
    """
    How much text should be storeable in this field
    """

    TINY = "tiny"
    """
    up to 255 characters
    """

    NORMAL = "normal"
    """
    64kb (default)
    """

    MEDIUM = "medium"
    """
    16mb
    """

    LONG = "long"
    """
    4gb
    """

    def visit(
        self,
        tiny: typing.Callable[[], T_Result],
        normal: typing.Callable[[], T_Result],
        medium: typing.Callable[[], T_Result],
        long: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is StringConfigOptions.TINY:
            return tiny()
        if self is StringConfigOptions.NORMAL:
            return normal()
        if self is StringConfigOptions.MEDIUM:
            return medium()
        if self is StringConfigOptions.LONG:
            return long()
