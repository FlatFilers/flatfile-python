# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .commit import Commit

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class CommitResponse(pydantic.BaseModel):
    """
    import datetime

    from flatfile import Commit, CommitResponse

    CommitResponse(
        data=Commit(
            id="us_vr_YOUR_ID",
            sheet_id="us_sh_YOUR_ID",
            created_by="us_usr_YOUR_ID",
            created_at=datetime.datetime.fromisoformat(
                "2019-08-24 14:15:22+00:00",
            ),
        ),
    )
    """

    data: Commit

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
