# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SheetAccess(str, enum.Enum):
    ALL = "*"
    ADD = "add"
    EDIT = "edit"
    DELETE = "delete"
    IMPORT = "import"

    def visit(
        self,
        all: typing.Callable[[], T_Result],
        add: typing.Callable[[], T_Result],
        edit: typing.Callable[[], T_Result],
        delete: typing.Callable[[], T_Result],
        import_: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SheetAccess.ALL:
            return all()
        if self is SheetAccess.ADD:
            return add()
        if self is SheetAccess.EDIT:
            return edit()
        if self is SheetAccess.DELETE:
            return delete()
        if self is SheetAccess.IMPORT:
            return import_()
