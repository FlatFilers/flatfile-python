# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CompositeUniqueConstraintStrategy(str, enum.Enum):
    HASH = "hash"
    """
    A hash of the fields will be used to determine uniqueness
    """

    CONCAT = "concat"
    """
    The values of the fields will be concatenated to determine uniqueness
    """

    def visit(self, hash: typing.Callable[[], T_Result], concat: typing.Callable[[], T_Result]) -> T_Result:
        if self is CompositeUniqueConstraintStrategy.HASH:
            return hash()
        if self is CompositeUniqueConstraintStrategy.CONCAT:
            return concat()
