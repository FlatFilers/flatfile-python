# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...roles.types.assign_actor_role_request import AssignActorRoleRequest

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class UserCreateAndInviteRequest(pydantic.BaseModel):
    """
    Properties used to create a new user
    ---
    from flatfile import AssignActorRoleRequest, UserCreateAndInviteRequest

    UserCreateAndInviteRequest(
        email="john.smith@example.com",
        name="John Smith",
        actor_roles=[
            AssignActorRoleRequest(
                role_id="us_rol_YOUR_ID",
            ),
            AssignActorRoleRequest(
                role_id="us_rol_YOUR_ID",
            ),
        ],
    )
    """

    email: str
    name: str
    actor_roles: typing.List[AssignActorRoleRequest] = pydantic.Field(alias="actorRoles")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
