# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ModelFileStatusEnum(str, enum.Enum):
    PARTIAL = "partial"
    COMPLETE = "complete"
    ARCHIVED = "archived"
    PURGED = "purged"
    FAILED = "failed"

    def visit(
        self,
        partial: typing.Callable[[], T_Result],
        complete: typing.Callable[[], T_Result],
        archived: typing.Callable[[], T_Result],
        purged: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ModelFileStatusEnum.PARTIAL:
            return partial()
        if self is ModelFileStatusEnum.COMPLETE:
            return complete()
        if self is ModelFileStatusEnum.ARCHIVED:
            return archived()
        if self is ModelFileStatusEnum.PURGED:
            return purged()
        if self is ModelFileStatusEnum.FAILED:
            return failed()
