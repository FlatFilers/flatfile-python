# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .document_response import DocumentResponse

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class ListDocumentsResponse(pydantic.BaseModel):
    """
    import datetime

    from flatfile import (
        Action,
        ActionMode,
        Document,
        DocumentResponse,
        ListDocumentsResponse,
    )

    ListDocumentsResponse(
        data=[
            DocumentResponse(
                data=Document(
                    id="us_dc_YOUR_ID",
                    space_id="us_sp_YOUR_ID",
                    environment_id="us_env_YOUR_ID",
                    title="My Document 1",
                    body="My information",
                    treatments=[],
                    actions=[
                        Action(
                            operation="submitAction",
                            mode=ActionMode.FOREGROUND,
                            label="Submit",
                            description="Submit data to webhook.site",
                            primary=True,
                        )
                    ],
                    created_at=datetime.datetime.fromisoformat(
                        "2022-09-18 00:19:57.007000+00:00",
                    ),
                    updated_at=datetime.datetime.fromisoformat(
                        "2022-09-18 00:19:57.007000+00:00",
                    ),
                ),
            )
        ],
    )
    """

    data: typing.List[DocumentResponse]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
