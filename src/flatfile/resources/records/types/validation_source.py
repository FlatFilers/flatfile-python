# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ValidationSource(str, enum.Enum):
    REQUIRED_CONSTRAINT = "required-constraint"
    UNIQUE_CONSTRAINT = "unique-constraint"
    CUSTOM_LOGIC = "custom-logic"
    UNLINKED = "unlinked"
    INVALID_OPTION = "invalid-option"
    IS_ARTIFACT = "is-artifact"

    def visit(
        self,
        required_constraint: typing.Callable[[], T_Result],
        unique_constraint: typing.Callable[[], T_Result],
        custom_logic: typing.Callable[[], T_Result],
        unlinked: typing.Callable[[], T_Result],
        invalid_option: typing.Callable[[], T_Result],
        is_artifact: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ValidationSource.REQUIRED_CONSTRAINT:
            return required_constraint()
        if self is ValidationSource.UNIQUE_CONSTRAINT:
            return unique_constraint()
        if self is ValidationSource.CUSTOM_LOGIC:
            return custom_logic()
        if self is ValidationSource.UNLINKED:
            return unlinked()
        if self is ValidationSource.INVALID_OPTION:
            return invalid_option()
        if self is ValidationSource.IS_ARTIFACT:
            return is_artifact()
