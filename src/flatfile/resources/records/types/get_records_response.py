# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .get_records_response_data import GetRecordsResponseData

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class GetRecordsResponse(pydantic.BaseModel):
    """
    import datetime

    from flatfile import (
        CellValueWithLinks,
        GetRecordsResponse,
        GetRecordsResponseData,
        RecordCounts,
        RecordWithLinks,
    )

    GetRecordsResponse(
        data=GetRecordsResponseData(
            records=[
                RecordWithLinks(
                    id="us_rc_YOUR_ID",
                    values={
                        "firstName": CellValueWithLinks(
                            messages=[],
                            valid=True,
                            updated_at=datetime.datetime.fromisoformat(
                                "2023-11-20 16:59:40.286000+00:00",
                            ),
                        ),
                        "lastName": CellValueWithLinks(
                            messages=[],
                            valid=True,
                            updated_at=datetime.datetime.fromisoformat(
                                "2023-11-20 16:59:40.286000+00:00",
                            ),
                        ),
                        "email": CellValueWithLinks(
                            messages=[],
                            valid=True,
                            updated_at=datetime.datetime.fromisoformat(
                                "2023-11-20 16:59:40.286000+00:00",
                            ),
                        ),
                    },
                    valid=True,
                    metadata={},
                )
            ],
            counts=RecordCounts(
                valid=1000,
                error=0,
                total=1000,
            ),
            version_id="us_vr_YOUR_ID",
            commit_id="us_vr_YOUR_ID",
            success=True,
        ),
    )
    """

    data: GetRecordsResponseData

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
