# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .secret import Secret

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class SecretsResponse(pydantic.BaseModel):
    """
    from flatfile import Secret, SecretsResponse

    SecretsResponse(
        data=[
            Secret(
                id="us_sec_YOUR_ID",
                name="My Secret",
                value="Sup3r$ecret\/alue!",
                environment_id="us_env_YOUR_ID",
                space_id="us_sp_YOUR_ID",
            )
        ],
    )
    """

    data: typing.List[Secret]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
