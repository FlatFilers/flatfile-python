# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...commons.types.secret_id import SecretId
from .write_secret import WriteSecret

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class Secret(WriteSecret):
    """
    The value of a secret
    ---
    from flatfile import Secret

    Secret(
        id="us_sec_YOUR_ID",
        name="My Secret",
        value="Sup3r$ecret\/alue!",
        environment_id="us_env_YOUR_ID",
        space_id="us_sp_YOUR_ID",
    )
    """

    id: SecretId = pydantic.Field(description="The ID of the secret.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
