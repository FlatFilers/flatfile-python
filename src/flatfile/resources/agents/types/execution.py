# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...commons.types.event_id import EventId

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class Execution(pydantic.BaseModel):
    """
    An execution of an agent
    ---
    import datetime

    from flatfile import Execution

    Execution(
        event_id="us_evt_9cuesESa7W9cuesE",
        success=True,
        created_at=datetime.datetime.fromisoformat(
            "2022-09-18 00:19:57.007000+00:00",
        ),
        completed_at=datetime.datetime.fromisoformat(
            "2022-09-18 00:20:04.007000+00:00",
        ),
        duration=500,
        topic="space:created",
    )
    """

    event_id: EventId = pydantic.Field(alias="eventId")
    success: bool = pydantic.Field(description="Whether the agent execution was successful")
    created_at: dt.datetime = pydantic.Field(alias="createdAt")
    completed_at: dt.datetime = pydantic.Field(alias="completedAt")
    duration: int = pydantic.Field(description="The duration of the agent execution")
    topic: str = pydantic.Field(description="The topics of the agent execution")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
