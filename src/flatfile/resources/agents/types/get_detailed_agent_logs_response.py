# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...commons.types.pagination import Pagination
from .detailed_agent_log import DetailedAgentLog

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class GetDetailedAgentLogsResponse(pydantic.BaseModel):
    """
    import datetime

    from flatfile import DetailedAgentLog, GetDetailedAgentLogsResponse, Pagination

    GetDetailedAgentLogsResponse(
        pagination=Pagination(
            current_page=3,
            page_count=50,
            total_count=100,
        ),
        data=[
            DetailedAgentLog(
                event_id="us_evt_9cuesESa7W9cuesE",
                success=True,
                created_at=datetime.datetime.fromisoformat(
                    "2022-09-18 00:19:57.007000+00:00",
                ),
                completed_at=datetime.datetime.fromisoformat(
                    "2022-09-18 00:20:04.007000+00:00",
                ),
                duration=500,
                topic="space:created",
                context={},
                log="SUCCESS",
            )
        ],
    )
    """

    pagination: typing.Optional[Pagination]
    data: typing.List[DetailedAgentLog]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
