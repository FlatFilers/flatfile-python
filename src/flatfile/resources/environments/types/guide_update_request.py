# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .guide_version_resource import GuideVersionResource

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class GuideUpdateRequest(pydantic.BaseModel):
    """
    Update a guide
    ---
    from flatfile import GuideUpdateRequest

    GuideUpdateRequest(
        description="Updated getting started guide",
        title="Data import made easy",
        slug="getting-started",
        environment_id="commons.EnvironmentId",
        metadata={"category": "onboarding"},
    )
    """

    description: typing.Optional[str] = None
    title: typing.Optional[str] = None
    metadata: typing.Optional[typing.Dict[str, typing.Any]] = None
    slug: typing.Optional[str] = None
    versions: typing.Optional[typing.List[GuideVersionResource]] = None
    blocks: typing.Optional[typing.List[typing.Optional[typing.Dict[str, typing.Any]]]] = None
    environment_id: typing.Optional[str] = pydantic.Field(alias="environmentId", default=None)

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
