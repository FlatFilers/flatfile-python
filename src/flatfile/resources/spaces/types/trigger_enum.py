# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TriggerEnum(str, enum.Enum):
    FIRST = "first"
    HOVER = "hover"
    EVENT = "event"
    MANUAL = "manual"

    def visit(
        self,
        first: typing.Callable[[], T_Result],
        hover: typing.Callable[[], T_Result],
        event: typing.Callable[[], T_Result],
        manual: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TriggerEnum.FIRST:
            return first()
        if self is TriggerEnum.HOVER:
            return hover()
        if self is TriggerEnum.EVENT:
            return event()
        if self is TriggerEnum.MANUAL:
            return manual()
