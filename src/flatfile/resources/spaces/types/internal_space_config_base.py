# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...commons.types.action import Action
from ...commons.types.environment_id import EnvironmentId
from ...commons.types.space_config_id import SpaceConfigId
from ...commons.types.workbook_id import WorkbookId
from .space_access import SpaceAccess

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class InternalSpaceConfigBase(pydantic.BaseModel):
    space_config_id: typing.Optional[SpaceConfigId] = pydantic.Field(alias="spaceConfigId")
    environment_id: typing.Optional[EnvironmentId] = pydantic.Field(alias="environmentId")
    primary_workbook_id: typing.Optional[WorkbookId] = pydantic.Field(alias="primaryWorkbookId")
    metadata: typing.Optional[typing.Any] = pydantic.Field(description="Metadata for the space")
    actions: typing.Optional[typing.List[Action]]
    access: typing.Optional[typing.List[SpaceAccess]]
    auto_configure: typing.Optional[bool] = pydantic.Field(alias="autoConfigure")
    namespace: typing.Optional[str]
    labels: typing.Optional[typing.List[str]]
    translations_path: typing.Optional[str] = pydantic.Field(alias="translationsPath")
    language_override: typing.Optional[str] = pydantic.Field(alias="languageOverride")
    archived_at: typing.Optional[dt.datetime] = pydantic.Field(
        alias="archivedAt", description="Date when space was archived"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
