# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ResolveTo(str, enum.Enum):
    CLIP = "clip"
    MAIN = "main"
    SNAPSHOT = "snapshot"

    def visit(
        self,
        clip: typing.Callable[[], T_Result],
        main: typing.Callable[[], T_Result],
        snapshot: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ResolveTo.CLIP:
            return clip()
        if self is ResolveTo.MAIN:
            return main()
        if self is ResolveTo.SNAPSHOT:
            return snapshot()
