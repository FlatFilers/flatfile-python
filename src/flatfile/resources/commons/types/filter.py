# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Filter(str, enum.Enum):
    """
    Options to filter records
    """

    VALID = "valid"
    ERROR = "error"
    ALL = "all"
    NONE = "none"

    def visit(
        self,
        valid: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
        all: typing.Callable[[], T_Result],
        none: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Filter.VALID:
            return valid()
        if self is Filter.ERROR:
            return error()
        if self is Filter.ALL:
            return all()
        if self is Filter.NONE:
            return none()
