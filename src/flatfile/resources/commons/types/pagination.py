# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class Pagination(pydantic.BaseModel):
    """
    pagination info
    ---
    from flatfile import Pagination

    Pagination(
        current_page=3,
        page_count=50,
        total_count=100,
    )
    """

    current_page: int = pydantic.Field(alias="currentPage", description="current page of results")
    page_count: int = pydantic.Field(alias="pageCount", description="total number of pages of results")
    total_count: int = pydantic.Field(alias="totalCount", description="total available results")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
