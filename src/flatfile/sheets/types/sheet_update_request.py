# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SheetUpdateRequest(UniversalBaseModel):
    """
    Changes to make to an existing sheet

    Examples
    --------
    from flatfile.sheets import SheetUpdateRequest

    SheetUpdateRequest(
        name="New Sheet Name",
        metadata={"rowHeaders": [6]},
    )
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the Sheet.
    """

    slug: typing.Optional[str] = pydantic.Field(default=None)
    """
    The slug of the Sheet.
    """

    metadata: typing.Optional[typing.Optional[typing.Any]] = pydantic.Field(default=None)
    """
    Useful for any contextual metadata regarding the sheet. Store any valid json
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
